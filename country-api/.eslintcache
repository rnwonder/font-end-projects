[{"C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\index.js":"1","C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\App.js":"2","C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\ListContainer.js":"3","C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\IsoContext.js":"4","C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\Top.js":"5","C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\MoreInfo.js":"6","C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\Card.js":"7"},{"size":614,"mtime":1613995639955,"results":"8","hashOfConfig":"9"},{"size":658,"mtime":1612287631030,"results":"10","hashOfConfig":"9"},{"size":4297,"mtime":1613992692858,"results":"11","hashOfConfig":"9"},{"size":25164,"mtime":1613991250640,"results":"12","hashOfConfig":"9"},{"size":2265,"mtime":1612242214605,"results":"13","hashOfConfig":"9"},{"size":3038,"mtime":1613993628393,"results":"14","hashOfConfig":"9"},{"size":572,"mtime":1612234654346,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ctnxhs",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\index.js",[],["33","34"],"C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\App.js",[],"C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\ListContainer.js",["35","36","37"],"import React, { useEffect, useState } from 'react';\r\nimport Card from './Card'\r\nimport {Link} from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst ListContainer = () => {\r\n\r\n    const [countriesData, setCountriesData] = useState([])\r\n    const [dataStatus, setDataStatus] = useState(false)\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [regionInput, setRegionInput] = useState('')\r\n    const [status, setStatus] = useState('LOADING')\r\n\r\n    useEffect(()=>{\r\n        if(!dataStatus) {\r\n            document.getElementById('status').classList.add('loading')\r\n            runFetch()\r\n        }\r\n        \r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(searchInput === '') {\r\n            \r\n            runFetch()\r\n        } else {\r\n            \r\n            setRegionInput('')\r\n            searchFetch()\r\n        }       \r\n    }, [searchInput])\r\n\r\n    useEffect(()=>{\r\n        if(regionInput === '' || regionInput === 'all') {\r\n            document.getElementById('status').classList.add('loading')\r\n            runFetch()\r\n        } else {\r\n            setSearchInput('')\r\n            regionFetch()\r\n        }\r\n        \r\n    }, [regionInput])\r\n\r\n    \r\n\r\n    async function runFetch(){\r\n        \r\n        const res = await fetch('https://restcountries.eu/rest/v2/all')\r\n        \r\n        \r\n        const data = await res.json()\r\n        \r\n        \r\n        setDataStatus(true)\r\n        setCountriesData(data)\r\n\r\n        console.log(countriesData)\r\n    }\r\n\r\n    const searchFetch = async() => {\r\n        try {\r\n            \r\n            const res = await fetch(`https://restcountries.eu/rest/v2/name/${searchInput}`)\r\n\r\n            const searchData = await res.json()\r\n            if(Array.isArray(searchData)){\r\n            setCountriesData(searchData)\r\n            }else{\r\n                setStatus('NO RESULT FOUND')\r\n                setCountriesData([])\r\n            }\r\n        } catch(err) {\r\n            console.log(err.message)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const regionFetch = async() => {\r\n        try {\r\n            const res = await fetch(`https://restcountries.eu/rest/v2/region/${regionInput}`)\r\n\r\n            const regionData = await res.json()\r\n\r\n            setCountriesData(regionData)\r\n        } catch(err) {\r\n            console.log(err.message)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const handleSearchInput = (e) =>{\r\n        setSearchInput(e.target.value)\r\n    }\r\n\r\n    const handleRegion = (e) => {\r\n        setRegionInput(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"list pad\">\r\n\r\n            <Helmet htmlAttributes>\r\n                <html lang=\"en\" />\r\n                <title>Countries - Rnwonder's Country List</title>\r\n                <meta name=\"description\" content=\"List of all the countries in the world\" />\r\n            </Helmet>\r\n            \r\n            <form action=\"\">\r\n                <input onChange={handleSearchInput} type=\"text\" name=\"search\" id=\"search\" value={searchInput} placeholder=\"Search for a country\"/>\r\n\r\n                <select onChange={handleRegion} value={regionInput} name=\"region\" id=\"region\" className=\"region\">\r\n                    <option value=\"\" disabled selected hidden>Filter by Region</option>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"africa\">Africa</option>\r\n                    <option value=\"americas\">Americas</option>\r\n                    <option value=\"asia\">Asia</option>\r\n                    <option value=\"europe\">Europe</option>\r\n                    <option value=\"oceania\">Oceania</option>\r\n                </select>\r\n\r\n                <i className=\"fas fa-search\"></i>\r\n            </form>\r\n\r\n\r\n\r\n\r\n\r\n            \r\n            <div className=\"card-container\">\r\n                {countriesData && countriesData.length> 0? countriesData.map(country => (\r\n                    <Link to={`/more/${country.alpha3Code}`}>\r\n                        <Card key={country.numericCode} name={country.name} population={country.population} region={country.region} capital={country.capital} flag={country.flag} />\r\n                    </Link>\r\n                )): <p id=\"status\" className=\"not-found\">{status}</p>}\r\n                 \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ListContainer;","C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\IsoContext.js",[],"C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\Top.js",[],"C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\MoreInfo.js",["38","39","40"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport {IsoContext} from './IsoContext'\r\nimport {Link} from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nconst MoreInfo = ({match}) => {\r\n    const {code, name} = useContext(IsoContext)\r\n    const [iso3To2, setIso3to2] = code\r\n    const [iso2ToName, setIso2ToName] = name\r\n    const [info, setInfo] = useState({\r\n        \"population\": '',\r\n        \"currencies\": [{name: ''}],\r\n        \"languages\": [{name: ''}],\r\n        \"borders\": [],\r\n        \"name\": ''\r\n\r\n    })\r\n    \r\n\r\n    useEffect(()=>{\r\n        getInfo()\r\n    }, [])\r\n\r\n    \r\n\r\n    const getInfo = async () => {\r\n        const res = await fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.name}`)\r\n\r\n        const infoData = await res.json()\r\n\r\n        setInfo(infoData) \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"more-info pad\">\r\n            <Helmet htmlAttributes>\r\n                <html lang=\"en\" />\r\n                <title>{`${info.name} - Rnwonder's Country List`}</title>\r\n                <meta name=\"description\" content={`More information on ${info.name}`} />\r\n            </Helmet>\r\n\r\n            <div className=\"button\">\r\n                <Link to='/'>\r\n                    <button> <i className=\"fas fa-long-arrow-alt-left\"></i> Back</button>\r\n                </Link>\r\n            </div>\r\n\r\n\r\n            <div className=\"show\">\r\n                <div className=\"flag\">\r\n                    <img src={info.flag} alt=\"\"/>\r\n                </div>\r\n\r\n                <div className=\"show-info\">\r\n                    <h2>{info.name}</h2>\r\n\r\n                    <div className=\"details\">\r\n                        <div className=\"left\">\r\n                            <p>Native Name: <span>{info.nativeName}</span></p>\r\n                            <p>Population: <span>{info.population.toLocaleString()}</span></p>\r\n                            <p>Region: <span>{info.region}</span></p>\r\n                            <p>Sub Region: <span>{info.subregion}</span></p>\r\n                            <p>Capital: <span>{info.capital}</span></p>\r\n                        </div>\r\n\r\n                        <div className=\"right\">\r\n                            <p>Top Level Domain: <span>{info.topLevelDomain}</span></p>\r\n                            <p>Currencies: <span>{info.currencies[0].name}</span></p>\r\n                            <p>Languages: <span>{info.languages.map(lang=>(lang.name)).join(', ')}</span></p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"border-country\">\r\n                        <h3>Border Countries:</h3>\r\n\r\n                        <ul>\r\n                            {info.borders.map(country=>(\r\n                                <li>{iso2ToName[iso3To2[country]].name}</li>\r\n                            ))}\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MoreInfo;","C:\\Users\\Rnwonder\\Documents\\GitHub\\front-end-projects\\country-api\\src\\components\\Card.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":20,"column":7,"nodeType":"47","endLine":20,"endColumn":9,"suggestions":"48"},{"ruleId":"45","severity":1,"message":"49","line":32,"column":8,"nodeType":"47","endLine":32,"endColumn":21,"suggestions":"50"},{"ruleId":"45","severity":1,"message":"51","line":43,"column":8,"nodeType":"47","endLine":43,"endColumn":21,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":9,"column":21,"nodeType":"55","messageId":"56","endLine":9,"endColumn":31},{"ruleId":"53","severity":1,"message":"57","line":10,"column":24,"nodeType":"55","messageId":"56","endLine":10,"endColumn":37},{"ruleId":"45","severity":1,"message":"58","line":23,"column":8,"nodeType":"47","endLine":23,"endColumn":10,"suggestions":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataStatus' and 'runFetch'. Either include them or remove the dependency array.","ArrayExpression",["62"],"React Hook useEffect has missing dependencies: 'runFetch' and 'searchFetch'. Either include them or remove the dependency array.",["63"],"React Hook useEffect has missing dependencies: 'regionFetch' and 'runFetch'. Either include them or remove the dependency array.",["64"],"no-unused-vars","'setIso3to2' is assigned a value but never used.","Identifier","unusedVar","'setIso2ToName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [dataStatus, runFetch]",{"range":"74","text":"75"},"Update the dependencies array to be: [runFetch, searchFetch, searchInput]",{"range":"76","text":"77"},"Update the dependencies array to be: [regionFetch, regionInput, runFetch]",{"range":"78","text":"79"},"Update the dependencies array to be: [getInfo]",{"range":"80","text":"81"},[649,651],"[dataStatus, runFetch]",[867,880],"[runFetch, searchFetch, searchInput]",[1166,1179],"[regionFetch, regionInput, runFetch]",[606,608],"[getInfo]"]